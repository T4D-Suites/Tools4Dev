

_t4dSrcCMakeParseMenu(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dSrcCMakeParseMenu
#   - Name:
#       _t4dSrcCMakeParseMenu
###
#   - Synopsis:
#       Run CMake Scripting mode using -P argument
###
#   - Definition:
#       This function has been defined to work with T4D-CMake library
#       Available options are here to make interaction with some CMake global var easier.
#
#       ยง Part1
#           1. List
#           2. List
#           3. List
#
#       ยง Part2
#           1. List
#
###
#   - Usage:
#       * {Name} <option>  [arguments]        = {One-Line Description}
#
###
#   - Available Options:
#       * {option1}               = {One-Line Description}
#
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _EnableLog="false"
    local _Verbose="false"
    local _ExtraVars=""
    local _TargetVars=""
    while [[ "$@" != "" ]]; do
        case "$1" in
            -v)
                _EnableLog="true"
                _Verbose="true"
                _ExtraVars="${_ExtraVars}-D LOG_VERBOSE=ON "
            ;;
            -vv)
                _EnableLog="true"
                _Verbose="true"
                _ExtraVars="${_ExtraVars}-D LOG_DEBUG=ON  "
            ;;
            -log)
                _EnableLog="true"
            ;;
            -C)
                _ExtraVars="${_ExtraVars}-D CF_MANUAL_BOOL=ON  "
            ;;
            -*)
                _ExtraVars="${_ExtraVars}${1} ${2} "
                shift
            ;;
            *)
                _TargetVars="${_TargetVars}${1} "
            ;;
        esac
        shift
    done

    echo "WS_ENABLE_CMAKE_VERBOSE=\"$_Verbose\""
    echo "WS_ENABLE_CMAKE_LOG=\"$_EnableLog\""
    echo "WS_CMAKE_EXTRA_VARS=\"$_ExtraVars\""
    echo "WS_TARGETS=\"$_TargetVars\""
###############################
}

_t4dSrcCMakeParseTargets(){
# Generated From $Tools4Dev_PATH/Engine/G4d/templates.env
# v1.8.0
###### _t4dSrcCMakeParseTargets
#   - Name:
#       _t4dSrcCMakeParseTargets
###
#   - Synopsis:
#       test
###
#   - Note:
#       <Required>
#       [Optionnal]
#       {XXXXXXX}       = Value To Be Changed, if {URL} then replace {URL} with a valid URL
###
###### DOCUMENTATION BLOC #####
########### CODE BLOC #########
    local _t4dErrorCode=1
    local _inputTargets="$@"
    local _products="example"
    local _projects="default"
    local _targets="default"
    local _variants="default"
    local _count="$(echo $_inputTargets | tr ' ' '\n' | grep -v '^$' | wc -l | sed 's| *||g')"
    case "$_count" in 
        0)
            _products="$WS_AVAILABLE_CMAKE_PRODUCTS"
            if [[ "$_products" == "Example" ]]; then
                _t4dDebugLog $pwarning "Example mode activated"
            fi
        ;;
        1)
            _products="$(echo $_inputTargets | cut -d ' ' -f1)"
        ;;
        2)
            _products="$(echo $_inputTargets | cut -d ' ' -f1)"
            _projects="$(echo $_inputTargets | cut -d ' ' -f2)"
        ;;
        3)
            _products="$(echo $_inputTargets | cut -d ' ' -f1)"
            _projects="$(echo $_inputTargets | cut -d ' ' -f2)"
            _targets="$(echo $_inputTargets | cut -d ' ' -f3)"
        ;;
        4)
            _products="$(echo $_inputTargets | cut -d ' ' -f1)"
            _projects="$(echo $_inputTargets | cut -d ' ' -f2)"
            _targets="$(echo $_inputTargets | cut -d ' ' -f3)"
            _variants="$(echo $_inputTargets | cut -d ' ' -f4)"
        ;;
        *)
            _t4dDebugLog "$perror" "_wksGenerate does not handle multiple scheme generation"
            return 1
        ;;
    esac
    
    echo "$_products|$_projects|$_targets|$_variants"

###############################
}