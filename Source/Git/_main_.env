#ERROR CODE 210
#PREFIX _t4dSrcGit
_t4dSrcGitNormalizedBranchName(){
##### _t4dSrcGitNormalizedBranchName
#   Used for pull Request Creation
#   Return [BugFix]  if Arg1 contain bugFix
#   Return [Feature] if Arg1 contain feature etc.
#   Usage : _t4dGitInfoNormalizeBranchName _t4dGitInfoBranch
##### DOCUMENTATION BLOC #####
    echo "$1" | sed 's|bugfix|[Bugfix] |g' | sed 's|develop|[Develop] |g' | sed 's|master|[Backport] |g' | sed 's|feature|[Feature] |g' | sed 's|jenkins|[Jenkins] |g' | sed 's|test|[INTEGRATION] |g' | sed 's|sprint|[SPRINT] |g' | sed 's|/| |g'
    
}

source $T4D_SOURCE_PATH/Git/git-info.env
source $T4D_SOURCE_PATH/Git/git-status.env
source $T4D_SOURCE_PATH/Git/git-utils.env

_t4dSrcGitStatus(){
##### _t4dSrcGitStatus
#   Return a customized git status with beautiful output
#   Usage _t4dSrcGitStatus
##### DOCUMENTATION BLOC #####
    local res=''
    res="$(git status -s 2>/dev/null)"
    echo "${pcyan}༼ つ ◕_◕ ༽つ Git Status${pstd}"
    echo ""
    if [[ "${res}" != "" ]]; then
        _t4dSrcGitStatusHuman $res
    else
        echo "    ${plgreen}¸¸♬·¯·♩¸¸♪·¯·♫¸¸Working tree clean¸¸♬·¯·♩¸¸♪·¯·♫¸¸${pstd}"
    fi
}

_t4dSrcGitIsMyBranchProtected(){
##### _t4dSrcGitIsMyBranchProtected
#   This function just check that current branch is not a protected branch that is used as origin
#   Commit on this type of branch shouldn't be used as a normal behavior but used carefully and most of the time locally
#   Usage : _t4dSrcGitIsMyBranchProtected master
#   Usage : _t4dSrcGitIsMyBranchProtected staging
#   Usage : _t4dSrcGitIsMyBranchProtected master staging
#   Return 1 if check failed
##### DOCUMENTATION BLOC #####
    unset __res
    __res=''
    if [[ "$(echo $1 | grep '^release')" != "" ]] || [[ "$(echo $1 | grep '^delivered')" != "" ]] || [[ "$(echo $1 | grep '^develop')" != "" ]]  || [[ "$(echo $1 | grep '^sprint')" != "" ]] || [[ "$(echo $1 | grep '^production')" != "" ]] || [[ "$(echo $1 | grep '^staging')" != "" ]] || [[ "$(echo $1 | grep '^master')" != "" ]]; then
        local __res="⚠️  Protected Branch ⚠️"
    fi
    echo "$__res"
}