#### MODULE HEADER BLOC
# Generated From $Tools4Dev_PATH/Templates/function.env
# This documentation will be read and compile for man usage, MarkDown file and shell documentation
# v1.2
#   - Rules :
#       1- Options Sections
#               #   - Options:
#               #
#               ###
#           Options Sections has to be empty, thoses sections are automatically filled by the doc generator,
#           if you want to add a custom manual option documentation you can replace Options by Available Options 
#           For Example :)
###
#### HEADER BLOC ####



######## SYNTAXES
#
#
#
#   Arg Loop -> while [[ "$@" != "" ]]; do          case $1
#       avoid more than 1 loop in a single function
#
#   Boolean :
#       0 -> Means true
#       1 -> Means false

#       But by default i use Empty/NonEmpty value
#
#   Sed statement :
#       sed 's|<Something>|<IntoSomething>|g'
#
#   Variable
#       local _CamelCase        = local function variable
#       local _MAJ=$1           = Variable defined by arguments
#       WS_VARIABLE             = workspace global variable or env variable
#       local WS_VARIABLE       = temporary override glogal variable

#
#       _OuputJsonFile, by default it will take the name of current function 
#           Example toto(){
#               local _OuputJsonFile="$T4D_PROJECT_LOG_PATH/toto.json"
#           }
#           if toto is a part of a module/project -> "$T4D_PROJECT_LOG_PATH/moduleName/toto.json"
#       
#   Function
#       All arguments saved in local variable at start
#
#
#   
#
#
####### Avoid 
#       if [[ $? -eq 0
#           if you want to launch secured shell ( set -e <Commands>)
#
#       do not use `...`, replace it by $(...)


_t4dFunctionName(){
# Generated From $Tools4Dev_PATH/Templates/function.env
# v1.5.0
###### _t4dFunctionName
#   - Name:
#       _t4dFunctionName
###
#   - Synopsis:
#       |One-line description of what it does. (less than 55 char)|
###
#   - Example:
#       |At Least One example|
###
###### DOCUMENTATION BLOC #####

    echo "Test" &> /dev/null

###############################
}
